@import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');


*{
  box-sizing: border-box;
}
body{
  font-family: 'Lato', sans-serif;
  margin: 0;
  overflow-x: hidden;
  background-color: #333;
  color: #222;
}
.container{
  background-color: #fafafa;
  width: 100vw;
  min-height: 100vh;
  padding: 50px;
}
.container.show-nav{
  transform: rotate(-20deg);
  transform-origin: top left;
  transition: transform 0.5s linear;
}
/* when the container has show-nav class added to it we want to style the div with circle class to rotate it*/
.container.show-nav .circle{
  transform: rotate(-70deg);
}

.circle-container{
  position: fixed;
  top: -100px;
  left: -100px;
}
.circle{
  background-color: #ff7979;
  height: 200px;
  width: 200px;
  border-radius: 50%;
  position: relative;
  transition: transform 0.5s linear;
}
.circle button{
  position: absolute;
  top: 50%;
  left:50%;
  height: 100px;
  background: transparent;
  border: 0;
  font-size: 26px;
  color: #fff;
  cursor: pointer;
}
.circle button:focus{
  outline: none;
}
.circle button#open{
  left: 60%
}
.circle button#close{
  top:60%;
  transform: rotate(90deg);
  transform-origin: top left;
}
.content img{
  max-width: 100%;
}
.content{
  max-width: 1000px;
  margin: 50px auto;
}
.content h1{
  margin:0;
}
.content small{
  color: #555;
  font-style: italic;
}
.content p{
  color: #333;
  line-height: 1.5;
}
/* the below is added so that when the container div has show-nav class then we want the direct nav lis can be viewed */
.container.show-nav + nav li{
  transform: translateX(0);
  transition-delay: 0.3s;
}
nav{
  position: fixed;
  bottom: 40px;
  left: 0;
  z-index: 100;
}
nav ul{
  list-style: none;
  padding-left: 30px;
}
nav ul li{
  text-transform: uppercase;
  color: #fff;
  margin: 40px 0;
  transform: translate(-100%);
  transition: transform 0.4s ease-in;
}
nav ul li i{
  font-size: 20px;
  margin-right: 10px;
}
/* We are trying to create an angle for the navbar li elements bysing the adjacent  adjacent sibling combinator + ;
The adjacent sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent element.
More info: https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_combinator
 */
nav ul li + li{
  margin-left:15px;
  transform: translate(-150%);
}
nav ul li + li + li{
  margin-left:30px;
  transform: translate(-200%);
}